# ============================================================
# Archivo de ejemplo de variables de entorno (.env.example)
# Copia este archivo a ".env" y reemplaza valores.
# Mantiene compatibilidad con claves existentes y añade las del ref.
# ============================================================

# --- App ---
APP_NAME="Ticket System API"
APP_ENV=development                  # Preferido (equivale a ENVIRONMENT)
LOG_LEVEL=INFO                       # DEBUG, INFO, WARNING, ERROR, CRITICAL
# Compat (si tu código aún lo usa):
ENVIRONMENT=development              # COMPAT de APP_ENV
DEBUG=true                           # Opcional

# --- Red/API ---
API_HOST=0.0.0.0
API_PORT=8000

# --- Seguridad base ---
SECRET_KEY=changeme                  # Genera uno real en .env (no subas)

# --- JWT / Autenticación ---
# Preferidos (nombres de referencia)
JWT_SECRET=CHANGE_ME
JWT_ALG=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=60

# Compatibilidad con nombres anteriores (si tu código ya los usa)
JWT_SECRET_KEY=${JWT_SECRET}                     # COMPAT deprecado de: JWT_SECRET
JWT_ALGORITHM=${JWT_ALG}                         # COMPAT deprecado de: JWT_ALG
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}

# --- CORS (separados por coma) ---
# Útil para frontend Vite en dev
CORS_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# --- Base de datos ---
# Opción A: Postgres en Docker Compose (dentro de containers)
# Usa el hostname del servicio definido en docker-compose.yml (db)
# DATABASE_URL=postgresql+psycopg://appuser:apppass@db:5432/tickets

# Opción B: Postgres local (fuera de Docker)
DATABASE_URL=postgresql+psycopg://appuser:apppass@localhost:5432/tickets

# Opción C: Postgres genérico (plantilla)
# DATABASE_URL=postgresql+psycopg://USER:PASSWORD@HOST:5432/DBNAME

# Opción D: SQLite (rápido para pruebas; requiere aiosqlite)
# DATABASE_URL=sqlite+aiosqlite:///./dev.db
